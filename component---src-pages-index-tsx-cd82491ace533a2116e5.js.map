{"version":3,"file":"component---src-pages-index-tsx-cd82491ace533a2116e5.js","mappings":"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","sources":["webpack://chainlist/./node_modules/@chakra-ui/layout/dist/chunk-5FO2ZLZM.mjs","webpack://chainlist/./node_modules/@chakra-ui/layout/dist/chunk-QJDVAY5Z.mjs","webpack://chainlist/./node_modules/@chakra-ui/stat/dist/chunk-7LNWOFRF.mjs","webpack://chainlist/./src/components/Chain.tsx","webpack://chainlist/./src/components/ChainList.tsx","webpack://chainlist/./src/pages/index.tsx","webpack://chainlist/./node_modules/@chakra-ui/layout/dist/chunk-3V5HNFOM.mjs"],"sourcesContent":["// src/grid.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Grid = forwardRef(function Grid2(props, ref) {\n  const {\n    templateAreas,\n    gap,\n    rowGap,\n    columnGap,\n    column,\n    row,\n    autoFlow,\n    autoRows,\n    templateRows,\n    autoColumns,\n    templateColumns,\n    ...rest\n  } = props;\n  const styles = {\n    display: \"grid\",\n    gridTemplateAreas: templateAreas,\n    gridGap: gap,\n    gridRowGap: rowGap,\n    gridColumnGap: columnGap,\n    gridAutoColumns: autoColumns,\n    gridColumn: column,\n    gridRow: row,\n    gridAutoFlow: autoFlow,\n    gridAutoRows: autoRows,\n    gridTemplateRows: templateRows,\n    gridTemplateColumns: templateColumns\n  };\n  return /* @__PURE__ */ jsx(chakra.div, { ref, __css: styles, ...rest });\n});\nGrid.displayName = \"Grid\";\n\nexport {\n  Grid\n};\n","import {\n  Grid\n} from \"./chunk-5FO2ZLZM.mjs\";\n\n// src/simple-grid.tsx\nimport {\n  forwardRef,\n  getToken,\n  useTheme\n} from \"@chakra-ui/system\";\nimport { mapResponsive } from \"@chakra-ui/breakpoint-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar SimpleGrid = forwardRef(\n  function SimpleGrid2(props, ref) {\n    const { columns, spacingX, spacingY, spacing, minChildWidth, ...rest } = props;\n    const theme = useTheme();\n    const templateColumns = minChildWidth ? widthToColumns(minChildWidth, theme) : countToColumns(columns);\n    return /* @__PURE__ */ jsx(\n      Grid,\n      {\n        ref,\n        gap: spacing,\n        columnGap: spacingX,\n        rowGap: spacingY,\n        templateColumns,\n        ...rest\n      }\n    );\n  }\n);\nSimpleGrid.displayName = \"SimpleGrid\";\nfunction toPx(n) {\n  return typeof n === \"number\" ? `${n}px` : n;\n}\nfunction widthToColumns(width, theme) {\n  return mapResponsive(width, (value) => {\n    const _value = getToken(\"sizes\", value, toPx(value))(theme);\n    return value === null ? null : `repeat(auto-fit, minmax(${_value}, 1fr))`;\n  });\n}\nfunction countToColumns(count) {\n  return mapResponsive(\n    count,\n    (value) => value === null ? null : `repeat(${value}, minmax(0, 1fr))`\n  );\n}\n\nexport {\n  SimpleGrid\n};\n","import {\n  useStatStyles\n} from \"./chunk-RQ72AXHY.mjs\";\n\n// src/stat-number.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar StatNumber = forwardRef(function StatNumber2(props, ref) {\n  const styles = useStatStyles();\n  return /* @__PURE__ */ jsx(\n    chakra.dd,\n    {\n      ref,\n      ...props,\n      className: cx(\"chakra-stat__number\", props.className),\n      __css: {\n        ...styles.number,\n        fontFeatureSettings: \"pnum\",\n        fontVariantNumeric: \"proportional-nums\"\n      }\n    }\n  );\n});\nStatNumber.displayName = \"StatNumber\";\n\nexport {\n  StatNumber\n};\n","import {\n  Button,\n  Center,\n  Flex,\n  Stat,\n  StatGroup,\n  StatLabel,\n  StatNumber,\n  Text,\n} from \"@chakra-ui/react\";\nimport React, { useContext } from \"react\";\nimport { Web3Context } from \"../context/Web3Context\";\nimport { ChainData } from \"../types/chain\";\nimport { ChainIcon } from \"./ChainIcon\";\nimport { Link } from \"gatsby\";\n\nexport const Chain = ({\n  name,\n  chainId,\n  nativeCurrency,\n  icon,\n  ...rest\n}: ChainData) => {\n  const { isConnected, handleConnect, handleAddChain } =\n    useContext(Web3Context);\n\n  const handleConnectClick = (event: React.MouseEvent) => {\n    event.preventDefault();\n    handleConnect();\n  };\n\n  const handleAddChainClick = (event: React.MouseEvent) => {\n    event.preventDefault();\n    handleAddChain({ name, chainId, nativeCurrency, ...rest });\n  };\n\n  return (\n    <Link to={`/chain/${chainId}`}>\n      <Flex\n        flexDirection=\"column\"\n        px=\"5\"\n        py=\"4\"\n        borderWidth=\"1px\"\n        rounded=\"md\"\n        boxShadow=\"base\"\n      >\n        <Flex justifyContent=\"space-between\">\n          <Flex flexDirection=\"column\" minW=\"200px\">\n            <Flex mb=\"2\">\n              <Text\n                fontSize=\"lg\"\n                fontWeight=\"semibold\"\n                lineHeight=\"short\"\n                isTruncated\n                verticalAlign=\"middle\"\n              >\n                {name}\n              </Text>\n            </Flex>\n            <StatGroup mb=\"2\">\n              <Stat>\n                <StatLabel>Chain ID</StatLabel>\n                <StatNumber fontSize=\"md\">{chainId}</StatNumber>\n              </Stat>\n              <Stat>\n                <StatLabel>Currency</StatLabel>\n                <StatNumber fontSize=\"md\">{nativeCurrency.symbol}</StatNumber>\n              </Stat>\n            </StatGroup>\n          </Flex>\n          {icon && (\n            <Flex>\n              <ChainIcon name={name} icon={icon} />\n            </Flex>\n          )}\n        </Flex>\n        <Center mt=\"auto\">\n          {!isConnected ? (\n            <Button onClick={handleConnectClick}>Connect</Button>\n          ) : (\n            <Button onClick={handleAddChainClick}>Add Chain</Button>\n          )}\n        </Center>\n      </Flex>\n    </Link>\n  );\n};\n","import { SimpleGrid } from \"@chakra-ui/react\";\nimport React, { useContext } from \"react\";\nimport { Chain } from \"./Chain\";\nimport { SearchContext } from \"../context/SearchContext\";\nimport { graphql, useStaticQuery } from \"gatsby\";\n\nexport const ChainList = () => {\n  const data = useStaticQuery(graphql`\n    {\n      allChain(sort: [{ chainId: ASC }]) {\n        nodes {\n          id\n          name\n          chain\n          chainId\n          rpc\n          icon {\n            publicURL\n            childImageSharp {\n              gatsbyImageData(width: 40, placeholder: NONE)\n            }\n          }\n          nativeCurrency {\n            decimals\n            name\n            symbol\n          }\n          explorers {\n            url\n            name\n            standard\n          }\n          status\n          faucets\n          redFlags\n        }\n      }\n    }\n  `);\n\n  const chains = data.allChain.nodes;\n\n  const { query, showTestnets, showDeprecated, showFlagged } = useContext(SearchContext);\n  const lowerCaseQuery = query.toLowerCase();\n\n  const handleFiltering = (chain) => {\n    const lowerCaseName = chain.name.toLowerCase();\n    const isTestnet =\n      !showTestnets &&\n      (chain.faucets.length > 0 || lowerCaseName.includes(\"testnet\"));\n    const isDeprecated = !showDeprecated && chain.status === \"deprecated\";\n    const isFlagged = !showFlagged && chain.redFlags?.length > 0;\n    if (isTestnet || isDeprecated || isFlagged) {\n      return false;\n    }\n    if (query.length > 0) {\n      return (\n        chain.name.toLowerCase().includes(lowerCaseQuery) ||\n        chain.chainId.toString().includes(query) ||\n        chain.nativeCurrency.symbol.toLowerCase().includes(lowerCaseQuery)\n      );\n    }\n    return true;\n  };\n\n  const filteredChains = chains.filter(handleFiltering);\n\n  return (\n    <SimpleGrid minChildWidth=\"300px\" spacing={4} mb=\"8\">\n      {filteredChains.map((c) => (\n        <Chain key={c.id} {...c} />\n      ))}\n    </SimpleGrid>\n  );\n};\n","import React from \"react\";\nimport { ChainList } from \"../components/ChainList\";\nimport { Seo } from \"../components/SEO\";\nimport { Layout } from \"../components/Layout\";\n\nconst IndexPage = () => (\n  <>\n    <Seo />\n    <Layout>\n      <ChainList />\n    </Layout>\n  </>\n);\n\nexport default IndexPage;\n","// src/center.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Center = chakra(\"div\", {\n  baseStyle: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\nCenter.displayName = \"Center\";\nvar centerStyles = {\n  horizontal: {\n    insetStart: \"50%\",\n    transform: \"translateX(-50%)\"\n  },\n  vertical: {\n    top: \"50%\",\n    transform: \"translateY(-50%)\"\n  },\n  both: {\n    insetStart: \"50%\",\n    top: \"50%\",\n    transform: \"translate(-50%, -50%)\"\n  }\n};\nvar AbsoluteCenter = forwardRef(\n  function AbsoluteCenter2(props, ref) {\n    const { axis = \"both\", ...rest } = props;\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ref,\n        __css: centerStyles[axis],\n        ...rest,\n        position: \"absolute\"\n      }\n    );\n  }\n);\n\nexport {\n  Center,\n  AbsoluteCenter\n};\n"],"names":["Grid","props","ref","templateAreas","gap","rowGap","columnGap","column","row","autoFlow","autoRows","templateRows","autoColumns","templateColumns","rest","styles","display","gridTemplateAreas","gridGap","gridRowGap","gridColumnGap","gridAutoColumns","gridColumn","gridRow","gridAutoFlow","gridAutoRows","gridTemplateRows","gridTemplateColumns","jsx","div","__css","displayName","SimpleGrid","columns","spacingX","spacingY","spacing","minChildWidth","theme","width","value","_value","n","widthToColumns","count","StatNumber","dd","className","cx","number","fontFeatureSettings","fontVariantNumeric","Chain","_ref","name","chainId","nativeCurrency","icon","isConnected","handleConnect","handleAddChain","useContext","Web3Context","___EmotionJSX","Link","to","Flex","flexDirection","px","py","borderWidth","rounded","boxShadow","justifyContent","minW","mb","Text","fontSize","fontWeight","lineHeight","isTruncated","verticalAlign","StatGroup","Stat","StatLabel","symbol","ChainIcon","Center","mt","Button","onClick","event","preventDefault","ChainList","chains","useStaticQuery","allChain","nodes","query","showTestnets","showDeprecated","showFlagged","SearchContext","lowerCaseQuery","toLowerCase","filteredChains","filter","chain","_chain$redFlags","lowerCaseName","isTestnet","faucets","length","includes","isDeprecated","status","isFlagged","redFlags","toString","map","c","_extends","key","id","IndexPage","React","Seo","Layout","baseStyle","alignItems","centerStyles","horizontal","insetStart","transform","vertical","top","both","axis","position"],"sourceRoot":""}