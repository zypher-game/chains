{"version":3,"file":"component---src-pages-404-tsx-6fe03f4d823ce73e2f36.js","mappings":"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","sources":["webpack://chainlist/./node_modules/@chakra-ui/layout/dist/chunk-6CSUKJP7.mjs","webpack://chainlist/./node_modules/@chakra-ui/layout/dist/chunk-SRMZVY4F.mjs","webpack://chainlist/./src/pages/404.tsx","webpack://chainlist/./node_modules/@chakra-ui/layout/dist/chunk-3V5HNFOM.mjs","webpack://chainlist/./node_modules/@chakra-ui/layout/dist/chunk-B2MGPQRJ.mjs","webpack://chainlist/./node_modules/@chakra-ui/layout/dist/chunk-P74GIWPW.mjs","webpack://chainlist/./node_modules/@chakra-ui/object-utils/dist/chunk-R3DH46PF.mjs"],"sourcesContent":["// src/box.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Box = chakra(\"div\");\nBox.displayName = \"Box\";\nvar Square = forwardRef(function Square2(props, ref) {\n  const { size, centerContent = true, ...rest } = props;\n  const styles = centerContent ? { display: \"flex\", alignItems: \"center\", justifyContent: \"center\" } : {};\n  return /* @__PURE__ */ jsx(\n    Box,\n    {\n      ref,\n      boxSize: size,\n      __css: {\n        ...styles,\n        flexShrink: 0,\n        flexGrow: 0\n      },\n      ...rest\n    }\n  );\n});\nSquare.displayName = \"Square\";\nvar Circle = forwardRef(function Circle2(props, ref) {\n  const { size, ...rest } = props;\n  return /* @__PURE__ */ jsx(Square, { size, ref, borderRadius: \"9999px\", ...rest });\n});\nCircle.displayName = \"Circle\";\n\nexport {\n  Box,\n  Square,\n  Circle\n};\n","// src/container.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Container = forwardRef(function Container2(props, ref) {\n  const { className, centerContent, ...rest } = omitThemingProps(props);\n  const styles = useStyleConfig(\"Container\", props);\n  return /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ref,\n      className: cx(\"chakra-container\", className),\n      ...rest,\n      __css: {\n        ...styles,\n        ...centerContent && {\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\"\n        }\n      }\n    }\n  );\n});\nContainer.displayName = \"Container\";\n\nexport {\n  Container\n};\n","import * as React from \"react\";\nimport { Text, Box, Container, Center, Heading } from \"@chakra-ui/react\";\n\nconst NotFoundPage = () => {\n  return (\n    <Box p=\"8\" textAlign=\"center\">\n      <Container>\n        <Center>\n          <Heading m=\"2\" as=\"h1\" size=\"2xl\">\n            404\n          </Heading>\n        </Center>\n        <Text mt=\"4\" opacity=\"0.75\">\n          These are not the droids you are looking for.\n        </Text>\n      </Container>\n    </Box>\n  );\n};\n\nexport default NotFoundPage;\n","// src/center.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Center = chakra(\"div\", {\n  baseStyle: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\nCenter.displayName = \"Center\";\nvar centerStyles = {\n  horizontal: {\n    insetStart: \"50%\",\n    transform: \"translateX(-50%)\"\n  },\n  vertical: {\n    top: \"50%\",\n    transform: \"translateY(-50%)\"\n  },\n  both: {\n    insetStart: \"50%\",\n    top: \"50%\",\n    transform: \"translate(-50%, -50%)\"\n  }\n};\nvar AbsoluteCenter = forwardRef(\n  function AbsoluteCenter2(props, ref) {\n    const { axis = \"both\", ...rest } = props;\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ref,\n        __css: centerStyles[axis],\n        ...rest,\n        position: \"absolute\"\n      }\n    );\n  }\n);\n\nexport {\n  Center,\n  AbsoluteCenter\n};\n","// src/heading.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Heading = forwardRef(function Heading2(props, ref) {\n  const styles = useStyleConfig(\"Heading\", props);\n  const { className, ...rest } = omitThemingProps(props);\n  return /* @__PURE__ */ jsx(\n    chakra.h2,\n    {\n      ref,\n      className: cx(\"chakra-heading\", props.className),\n      ...rest,\n      __css: styles\n    }\n  );\n});\nHeading.displayName = \"Heading\";\n\nexport {\n  Heading\n};\n","// src/text.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { compact } from \"@chakra-ui/object-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Text = forwardRef(function Text2(props, ref) {\n  const styles = useStyleConfig(\"Text\", props);\n  const { className, align, decoration, casing, ...rest } = omitThemingProps(props);\n  const aliasedProps = compact({\n    textAlign: props.align,\n    textDecoration: props.decoration,\n    textTransform: props.casing\n  });\n  return /* @__PURE__ */ jsx(\n    chakra.p,\n    {\n      ref,\n      className: cx(\"chakra-text\", props.className),\n      ...aliasedProps,\n      ...rest,\n      __css: styles\n    }\n  );\n});\nText.displayName = \"Text\";\n\nexport {\n  Text\n};\n","// src/compact.ts\nfunction compact(object) {\n  const clone = Object.assign({}, object);\n  for (let key in clone) {\n    if (clone[key] === void 0)\n      delete clone[key];\n  }\n  return clone;\n}\n\nexport {\n  compact\n};\n"],"names":["Box","displayName","Square","props","ref","size","centerContent","rest","styles","display","alignItems","justifyContent","jsx","boxSize","__css","flexShrink","flexGrow","borderRadius","Container","className","div","cx","flexDirection","NotFoundPage","___EmotionJSX","p","textAlign","Center","Heading","m","as","Text","mt","opacity","baseStyle","centerStyles","horizontal","insetStart","transform","vertical","top","both","axis","position","h2","align","decoration","casing","aliasedProps","textDecoration","textTransform","compact","object","clone","Object","assign","key"],"sourceRoot":""}